ifneq (,)
.error This Makefile requires GNU Make.
endif

ifndef VERBOSE
MAKEFLAGS += --no-print-directory
endif


# -------------------------------------------------------------------------------------------------
# Default configuration
# -------------------------------------------------------------------------------------------------
CURRENT_DIR = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
# File lint
FL_VERSION  = latest
FL_IGNORES  = .git/,.github/
# Json lint
JL_VERSION = latest
JL_IGNORES = .git/,.github/
# Yamllint
YL_VERSION = latest
# Shellcheck
SC_IGNORES = .git/,.github/
SC_VERSION = stable

# -------------------------------------------------------------------------------------------------
# Lint Targets
# -------------------------------------------------------------------------------------------------
.PHONY: lint
lint: lint-files
lint: lint-yaml
lint: lint-json
lint: lint-bash


.PHONY: lint-files
lint-files: _lint-files-pull
lint-files:
	@echo "################################################################################"
	@echo "# Lint Files"
	@echo "################################################################################"
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-cr --text --ignore '$(FL_IGNORES)' --path .
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-crlf --text --ignore '$(FL_IGNORES)' --path .
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-trailing-single-newline --text --ignore '$(FL_IGNORES)' --path .
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-trailing-space --text --ignore '$(FL_IGNORES)' --path .
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-utf8 --text --ignore '$(FL_IGNORES)' --path .
	@docker run --rm $$(tty -s && echo "-it" || echo) -v $(CURRENT_DIR):/data cytopia/file-lint:$(FL_VERSION) file-utf8-bom --text --ignore '$(FL_IGNORES)' --path .
	@echo


.PHONY: lint-yaml
lint-yaml: _lint-yaml-pull
lint-yaml:
	@echo "################################################################################"
	@echo "# Lint Yaml"
	@echo "################################################################################"
	@if docker run --rm $$(tty -s && echo "-it" || echo) -v "$(CURRENT_DIR):/data:ro" -w /data cytopia/yamllint:$(YL_VERSION) .; then \
		echo "OK"; \
	else \
		echo "Failed"; \
		exit 1; \
	fi;
	@echo


.PHONY: lint-json
lint-json: _lint-json-pull
lint-json:
	@echo "################################################################################"
	@echo "# Lint JSON"
	@echo "################################################################################"
	@if docker run --rm $$(tty -s && echo "-it" || echo) -v "$(CURRENT_DIR):/data:ro" -w /data cytopia/jsonlint:$(JL_VERSION) \
		-t '  ' -i '$(JL_IGNORES)' '*.json'; then \
		echo "OK"; \
	else \
		echo "Failed"; \
		exit 1; \
	fi;
	@echo


.PHONY: lint-bash
lint-bash: _lint-bash-pull
lint-bash:
	@echo "################################################################################"
	@echo "# Lint Bash"
	@echo "################################################################################"
	@IGNORES=""; \
	if [ "$(SC_IGNORES)" ]; then \
		IGNORES="$$( echo "-not \( -path \"./$(SC_IGNORES)*\"" | sed 's|,|*" -o -path "./|g' ) \)"; \
	fi; \
	CMD="find . -name '*.sh' $${IGNORES} -print0"; \
	echo "$${CMD}"; \
	if [ "$$( eval "$${CMD}" )" != "" ]; then \
		eval "$${CMD}" | xargs -0 -n1  docker run --rm -v $(CURRENT_DIR):/data -w /data koalaman/shellcheck:$(SC_VERSION) --shell=bash; \
	fi


# -------------------------------------------------------------------------------------------------
# Helper Targets
# -------------------------------------------------------------------------------------------------
.PHONY: _lint-files-pull
_lint-files-pull:
	@echo "Pulling cytopia/file-lint:$(FL_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/file-lint:$(FL_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-yaml-pull
_lint-yaml-pull:
	@echo "Pulling cytopia/yamllint:$(YL_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/yamllint:$(YL_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-json-pull
_lint-json-pull:
	@echo "Pulling cytopia/jsonlint:$(JL_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/jsonlint:$(JL_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-bash-pull
_lint-bash-pull:
	@echo "Pulling koalaman/shellcheck:$(SC_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q koalaman/shellcheck:$(SC_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;
