ifneq (,)
.error This Makefile requires GNU Make.
endif

ifndef VERBOSE
MAKEFLAGS += --no-print-directory
endif


# -------------------------------------------------------------------------------------------------
# Default configuration
# -------------------------------------------------------------------------------------------------
# MyPy
MYPY_VERSION    = latest
MYPY_ARGS       =
MYPY_DIR        = .

# Pylint
PYLINT_VERSION  = latest
PYLINT_PIP_PKGS =
PYLINT_ARGS     =
PYLINT_DIR      = .

# PyCodeStyle
PYCODE_VERSION  = latest
PYCODE_ARGS     =
PYCODE_DIR      = .

# Black
BLACK_VERSION   = latest
BLACK_LINT_ARGS = --check --diff
BLACK_FIX_ARGS  =
BLACK_DIR       = .


# -------------------------------------------------------------------------------------------------
# Lint Targets
# -------------------------------------------------------------------------------------------------
.PHONY: lint
lint:: lint-mypy
lint:: lint-pylint
lint:: lint-pycode
lint:: lint-black


.PHONY: lint-mypy
lint-mypy: _lint-mypy-pull
lint-mypy:
	@echo "################################################################################"
	@echo "# Lint MyPy"
	@echo "################################################################################"
	docker run --rm $$(tty -s && echo "-it" || echo) -e PIP_ROOT_USER_ACTION=ignore -v $$(pwd):/data -w /data cytopia/mypy:$(MYPY_VERSION) \
		--install-types \
		--non-interactive \
		$(MYPY_ARGS) $(MYPY_DIR)

.PHONY: lint-pylint
lint-pylint: _lint-pylint-pull
lint-pylint:
	@echo "################################################################################"
	@echo "# Lint Pylint"
	@echo "################################################################################"
	docker run --rm $$(tty -s && echo "-it" || echo) -e PIP_ROOT_USER_ACTION=ignore -v $$(pwd):/data -w /data --entrypoint=sh cytopia/pylint:$(PYLINT_VERSION) \
		-c 'for pkg in $(PYLINT_PIP_PKGS); do python3 -m pip install $${pkg}; done && pylint $(PYLINT_ARGS) $(PYLINT_DIR)'

.PHONY: lint-pycode
lint-pycode: _lint-pycode-pull
lint-pycode:
	@echo "################################################################################"
	@echo "# Lint PyCodeStyle"
	@echo "################################################################################"
	docker run --rm $$(tty -s && echo "-it" || echo) -e PIP_ROOT_USER_ACTION=ignore -v $$(pwd):/data -w /data cytopia/pycodestyle:$(PYCODE_VERSION) \
		$(PYCODE_ARGS) \
		$(PYCODE_DIR)

.PHONY: lint-black
lint-black: _lint-black-pull
lint-black:
	@echo "################################################################################"
	@echo "# Lint Python Black"
	@echo "################################################################################"
	docker run --rm $$(tty -s && echo "-it" || echo) -e PIP_ROOT_USER_ACTION=ignore -v $$(pwd):/data -w /data cytopia/black:$(BLACK_VERSION) \
		$(BLACK_LINT_ARGS) \
		$(BLACK_DIR)

# -------------------------------------------------------------------------------------------------
# Fix Targets
# -------------------------------------------------------------------------------------------------
.PHONY: fix
fix:: fix-black

fix-black: _lint-black-pull
fix-black:
	@echo "################################################################################"
	@echo "# Fix Python Black"
	@echo "################################################################################"
	docker run --rm $$(tty -s && echo "-it" || echo) -e PIP_ROOT_USER_ACTION=ignore -v $$(pwd):/data -w /data cytopia/black:$(BLACK_VERSION) \
		$(BLACK_FIX_ARGS) \
		$(BLACK_DIR)



# -------------------------------------------------------------------------------------------------
# Helper Targets
# -------------------------------------------------------------------------------------------------
.PHONY: _lint-mypy-pull
_lint-mypy-pull:
	@echo "Pulling cytopia/mypy:$(MYPY_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/mypy:$(MYPY_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-pylint-pull
_lint-pylint-pull:
	@echo "Pulling cytopia/pylint:$(PYLINT_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/pylint:$(PYLINT_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-pycode-pull
_lint-pycode-pull:
	@echo "Pulling cytopia/pycodestyle:$(PYCODE_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/pycodestyle:$(PYCODE_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;

.PHONY: _lint-black-pull
_lint-black-pull:
	@echo "Pulling cytopia/black:$(BLACK_VERSION)"; \
	SUCC=0; \
	for i in $$(seq 10); do \
		if docker pull -q cytopia/black:$(BLACK_VERSION); then \
			SUCC=1; \
			break; \
		fi; \
		sleep 1; \
	done; \
	if [ "$${SUCC}" = "0" ]; then echo "FAILED"; exit 1; fi;
